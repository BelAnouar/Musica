version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    ports:
      - "8084:8084"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/music
      - SPRING_DATA_MONGODB_DATABASE=music
    networks:
      - app-network
    restart: on-failure

  mongodb:
    image: mongo:latest
    container_name: mongodb-app
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    command: ["mongod", "--noauth"]
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express-app
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
  sonarqube:
    image: sonarqube:latest
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - app-network

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  mongodb_data:
    name: mongodb_data

networks:
  app-network:
    driver: bridge